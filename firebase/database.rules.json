{
  "rules": {
    ".read": "auth.uid != null && auth.token.email_verified == true",
    ".write": "auth.uid != null && auth.token.email_verified == true",
    "pending-users": {
      ".read": "auth.uid != null && auth.token.email_verified == true && root.child('users').child(auth.uid).child('roles').child('admin').exists() && root.child('users').child(auth.uid).child('roles').child('admin').val() === true",
      ".write": "auth.uid != null && auth.token.email_verified == true && root.child('users').child(auth.uid).child('roles').child('admin').exists() && root.child('users').child(auth.uid).child('roles').child('admin').val() === true",
      "$email": {
        ".validate": "$email.matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i)",
        "roles": {
          "$role": {
            ".validate": "$role.length < 16 && $role.length > 0 && newData.isBoolean()"
          }
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "users": {
      ".indexOn": [
        "email"
      ],
      "$uid": {
        ".validate": "newData.hasChildren(['email','roles'])",
        ".read": "auth.uid != null && auth.token.email_verified == true && $uid == auth.uid || (root.child('users').child(auth.uid).child('roles').child('admin').exists() && root.child('users').child(auth.uid).child('roles').child('admin').val() === true)",
        ".write": "auth.uid != null && auth.token.email_verified == true && $uid == auth.uid || (root.child('users').child(auth.uid).child('roles').child('admin').exists() && root.child('users').child(auth.uid).child('roles').child('admin').val() === true)",
        "email": {
          ".validate": "newData.isString() && newData.val().length < 128 && newData.val().length > 0"
        },
        "roles": {
          ".validate": "newData.hasChild('admin')",
          "admin": {
            ".write": "auth.uid != null && auth.token.email_verified == true && ((newData.val() === false && $uid == auth.uid) || (root.child('users').child(auth.uid).child('roles').child('admin').exists() && root.child('users').child(auth.uid).child('roles').child('admin').val() === true))",
            ".validate": "newData.isBoolean()"
          },
          "$role": {
            ".write": "auth.uid != null && auth.token.email_verified == true && root.child('users').child(auth.uid).child('roles').child('admin').exists() && root.child('users').child(auth.uid).child('roles').child('admin').val() === true",
            ".validate": "$role.length < 16 && $role.length > 0 && newData.isBoolean()"
          }
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "$other": {
      ".validate": false
    }
  }
}
